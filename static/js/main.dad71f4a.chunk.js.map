{"version":3,"sources":["help/home/HelpHome.tsx","help/lessons/HelpLessons.tsx","help/messages/HelpMessages.tsx","help/profile/HelpProfile.tsx","help/search/HelpSearch.tsx","help/tournaments/HelpTournaments.tsx","home/Home.tsx","home/lessons/Lessons.tsx","home/tournaments/Tournament.tsx","messages/image.tsx","messages/Message.tsx","profile/addr-info/AddressInfo.tsx","profile/pay-info/PaymentInfo.tsx","profile/user-info/UserInfo.tsx","profile/Profile.tsx","search/Search.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["HelpHome","id","Accordion","Card","Toggle","eventKey","as","Header","Collapse","className","src","process","width","height","alt","HelpLessons","HelpMessages","HelpProfile","HelpSearch","HelpTournaments","Home","style","background","to","title","fontSize","fontWeight","overflow","lessons","upcomingLessons","JSON","parse","localStorage","getItem","length","marginRight","lesson","div","subTitle","undefined","instructor","date","buildUpComingLessons","tournaments","upcomingTournaments","tournament","buildUpComingTournaments","Lessons","Tournament","Image","version","xmlns","viewBox","preserveAspectRatio","transform","fill","stroke","d","Messages","useState","msg","setMsg","msgs","setMsgs","buildMessage","messages","Math","random","toString","type","placeholder","value","onKeyPress","evt","key","onChange","target","Button","variant","onClick","AddressInfo","props","resetAddr","address","setAddress","streetName","city","postalCode","country","unitOrHouseNumber","addressValid","setAddressValid","InputGroup","Text","FormControl","disabled","temp","tempValid","Modal","Footer","profile","Object","assign","save","close","PaymentInfo","resetCard","cardInfo","setCardInfo","cardNumber","cvv2","exp","cardInfoValid","setcardInfoValid","showCard","setCard","split","map","val","ind","arr","join","UserInfo","resetProfile","setProfile","name","username","email","password","phoneNumber","dob","profileValid","setProfileValid","showPassword","setPassowrd","memberID","Profile","userEdit","setUserEdit","addrEdit","setAddrEdit","paymEdit","setPaymEdit","Body","Search","filtersDiv","useRef","completionListDiv","cardListDiv","showFilters","setShowFilters","showCart","setShowCart","selectedFilters","setSelectedFilters","searchTerm","setSearchTerm","price","cart","setCart","autocomplete","setAutocomplete","cartItems","setCartItems","useEffect","search","setItem","stringify","console","log","crt","tempCart","cardItemsDiv","tempCartItem","buildCartItems","updateSearchList","term","getSearchStuff","filter","toLowerCase","includes","searchDivs","searchItems","item","checkout","setCheckout","handleClose","toast","setToast","payment","setPayment","filters","filtersBar","i","chip","newFilters","builderFiltersBar","current","ref","transition","checked","marginLeft","htmlFor","gap","show","onHide","closeButton","Title","position","top","left","Toast","onClose","delay","autohide","helpToComponentMap","HOME","MESSAGES","SEARCH","LESSONS","TOURNAMENTS","PROFILE","App","setShow","helpHeading","window","location","href","substring","lastIndexOf","toUpperCase","display","justifyContent","alignItems","borderRadius","margin","Switch","path","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dad71f4a.chunk.js","sourcesContent":["import { Accordion, Card } from \"react-bootstrap\";\r\n\r\nexport function HelpHome(): JSX.Element {\r\n  return (\r\n    <div id=\"helpHomeAccordion\">\r\n      <Accordion>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"0\" as={Card.Header}>\r\n            Navigation\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/homeh1.jpg\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Home Help 1\"\r\n              />\r\n              <div className=\"px-3\">\r\n                The arrows point to different routes that users can take such as{\" \"}\r\n                <strong>Search</strong>, <strong>Profile</strong>,{\" \"}\r\n                <strong>Messages</strong> and then back to <strong>Home</strong>\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"1\" as={Card.Header}>\r\n            Upcoming Information\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/homeh2.jpg\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Home Help 2\"\r\n              />\r\n              <div className=\"px-3\">\r\n                The page is separated into 2 sections to show upcoming lessons\r\n                and tournaments. The section will only show upto 6 results of\r\n                upcoming information and to view everything the user should\r\n                click the arrow buttons (<strong>Refer to Navigation</strong>)\r\n                to view the entire list\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","export function HelpLessons(): JSX.Element {\r\n  return <div>Lessons Help page</div>;\r\n}\r\n","export function HelpMessages(): JSX.Element {\r\n  return <div>Messages Help page</div>;\r\n}\r\n","import { Accordion, Card } from \"react-bootstrap\";\r\n\r\nexport function HelpProfile(): JSX.Element {\r\n  return (\r\n    <div id=\"helpProfileAccordion\">\r\n      <Accordion>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"0\" as={Card.Header}>\r\n            In Profile Navigation\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/profileh1.gif\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Profile Help 1\"\r\n              />\r\n              <div className=\"px-3\">\r\n                Click on the headings of each sections to view the section\r\n                information.\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"1\" as={Card.Header}>\r\n            Editing Profile Information\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/profileh2.gif\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Profile Help 2\"\r\n              />\r\n              <div className=\"px-3\">\r\n                Open a section and click the edit button. If a field is empty\r\n                the user won't be able to save the information (Clicking close\r\n                will reset the information).\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { Accordion, Card } from \"react-bootstrap\";\r\n\r\nexport function HelpSearch(): JSX.Element {\r\n  return (\r\n    <div id=\"helpSearchAccordion\">\r\n      <Accordion>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"0\" as={Card.Header}>\r\n            Filtering\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/searchh1.gif\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Search Help 1\"\r\n              />\r\n              <div className=\"px-3\">\r\n                Click on the filter button to open the overlay and select\r\n                filters.\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"1\" as={Card.Header}>\r\n            Searching for Items and Add to Cart\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/searchh2.gif\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Search Help 2\"\r\n              />\r\n              <div className=\"px-3\">\r\n                Search for an item click on result to add to cart\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"2\" as={Card.Header}>\r\n            Accessing the Cart\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/searchh3.gif\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Search Help 3\"\r\n              />\r\n              <div className=\"px-3\">\r\n                Click on cart icon button to access the cart overlay to view\r\n                items in it. Click the close icon button where the cart used to\r\n                be go back to search results\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Accordion.Toggle eventKey=\"3\" as={Card.Header}>\r\n            Checkout\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"3\">\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/searchh4.gif\"}\r\n                width=\"410px\"\r\n                height=\"250px\"\r\n                alt=\"Search Help 4\"\r\n              />\r\n              <div className=\"px-3\">\r\n                Once in cart view click on the shopping bag icon button to\r\n                access the payment checkout modal. From there your credit cart\r\n                information should be autofilled. If you want to change any\r\n                information you can do so but everytime you go to checkout your\r\n                account payment information will be autofilled. Once you have\r\n                finished and clicked <strong>Complete Checkout</strong> a\r\n                notification will appear confirming your order\r\n              </div>\r\n            </div>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","export function HelpTournaments(): JSX.Element {\r\n  return <div>Tournaments Help page</div>;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nexport function Home(): JSX.Element {\r\n  // tslint:disable-next-line: typedef\r\n  const buildUpComingLessons = () => {\r\n    let lessons: JSX.Element[] = [];\r\n    // tslint:disable-next-line: typedef\r\n    const upcomingLessons = JSON.parse(\r\n      localStorage.getItem(\"upcoming\") || \"{}\"\r\n    ).lessons;\r\n\r\n    if (upcomingLessons.length === 0) {\r\n      lessons = [\r\n        ...lessons,\r\n        <div\r\n          className=\"d-flex justify-content-center text-danger\"\r\n          style={{ fontSize: \"22px\" }}\r\n        >\r\n          <i\r\n            className=\"bi bi-exclamation-octagon-fill\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n          <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n            No Lessons\r\n          </h6>\r\n        </div>,\r\n      ];\r\n    } else {\r\n      for (const lesson of upcomingLessons) {\r\n        const div: JSX.Element = (\r\n          <div key={lesson.title} className=\"item d-flex flex-column mt-2\">\r\n            <div className=\"title\">{`${lesson.title}`} &nbsp;</div>\r\n            <div className=\"text-muted d-flex justify-content-between\">\r\n              <div>{lesson.subTitle}</div>\r\n              {lesson.instructor !== undefined ? (\r\n                <div>\r\n                  <i\r\n                    className=\"bi bi-person-fill mr-2\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"left\"\r\n                    title=\"Instructor\"\r\n                  />\r\n                  {lesson.instructor}\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div>\r\n                <i className=\"bi bi-calendar mr-2\" />\r\n                {lesson.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        lessons = [...lessons, div];\r\n      }\r\n    }\r\n\r\n    return lessons;\r\n  };\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const buildUpComingTournaments = () => {\r\n    let tournaments: JSX.Element[] = [];\r\n    // tslint:disable-next-line: typedef\r\n    const upcomingTournaments = JSON.parse(\r\n      localStorage.getItem(\"upcoming\") || \"{}\"\r\n    ).tournaments;\r\n\r\n    if (upcomingTournaments.length === 0) {\r\n      tournaments = [\r\n        ...tournaments,\r\n        <div\r\n          className=\"d-flex justify-content-center text-danger\"\r\n          style={{ fontSize: \"22px\" }}\r\n        >\r\n          <i\r\n            className=\"bi bi-exclamation-octagon-fill\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n          <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n            No Tournaments\r\n          </h6>\r\n        </div>,\r\n      ];\r\n    } else {\r\n      for (const tournament of upcomingTournaments) {\r\n        const div: JSX.Element = (\r\n          <div key={tournament.title} className=\"item d-flex flex-column mt-2\">\r\n            <div className=\"title\">{`${tournament.title}`} &nbsp;</div>\r\n            <div className=\"text-muted d-flex justify-content-between\">\r\n              <div>{tournament.subTitle}</div>\r\n              <div>\r\n                <i className=\"bi bi-calendar mr-2\" />\r\n                {tournament.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        tournaments = [...tournaments, div];\r\n      }\r\n    }\r\n\r\n    return tournaments;\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"border-bottom border-dark border-5 rounded\"\r\n        id=\"upcomingLessons\"\r\n      >\r\n        <div\r\n          className=\"d-flex justify-content-between mx-3 px-2 mt-2 pt-2 pb-2\"\r\n          style={{\r\n            background:\r\n              \"linear-gradient(to right, rgba(67, 233, 123, 0.5), rgba(56, 249, 215, 0.5))\",\r\n          }}\r\n        >\r\n          <h4 className=\"d-flex justify-content-center align-items-center\">\r\n            Upcoming Lessons\r\n          </h4>\r\n          <Link to=\"/lessons\">\r\n            <i\r\n              className=\"bi bi-arrow-right btn btn-outline-success\"\r\n              data-bs-toggle=\"tooltip\"\r\n              data-bs-placement=\"left\"\r\n              title=\"Click to see expanded list\"\r\n              style={{ fontSize: \"22px\", fontWeight: \"bolder\" }}\r\n            ></i>\r\n          </Link>\r\n        </div>\r\n        <div\r\n          className=\"mx-3 px-2 mt-2 pt-2 pb-2\"\r\n          style={{ height: \"300px\", overflow: \"auto\" }}\r\n        >\r\n          {/* <div\r\n            className=\"d-flex justify-content-center text-danger\"\r\n            style={{ fontSize: \"22px\" }}\r\n          >\r\n            <i\r\n              className=\"bi bi-exclamation-octagon-fill\"\r\n              style={{ marginRight: \"5px\" }}\r\n            ></i>\r\n            <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n              No Lessons\r\n            </h6>\r\n          </div> */}\r\n          {buildUpComingLessons()}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"border-bottom border-dark border-5 rounded\"\r\n        id=\"upcomingTournaments\"\r\n      >\r\n        <div\r\n          className=\"d-flex justify-content-between mx-3 px-2 mt-2 pt-2 pb-2\"\r\n          style={{\r\n            background:\r\n              \"linear-gradient(to right, rgba(67, 233, 123, 0.5), rgba(56, 249, 215, 0.5))\",\r\n          }}\r\n        >\r\n          <h4 className=\"d-flex justify-content-center align-items-center\">\r\n            Upcoming Tournaments\r\n          </h4>\r\n          <Link to=\"/tournaments\">\r\n            <i\r\n              className=\"bi bi-arrow-right btn btn-outline-success\"\r\n              data-bs-toggle=\"tooltip\"\r\n              data-bs-placement=\"left\"\r\n              title=\"Click to see expanded list\"\r\n              style={{ fontSize: \"22px\", fontWeight: \"bolder\" }}\r\n            ></i>\r\n          </Link>\r\n        </div>\r\n        <div\r\n          className=\"mx-3 px-2 mt-2 pt-2 pb-2\"\r\n          style={{ height: \"300px\", overflow: \"auto\" }}\r\n        >\r\n          {/* <div\r\n            className=\"d-flex justify-content-center text-danger\"\r\n            style={{ fontSize: \"22px\" }}\r\n          >\r\n            <i\r\n              className=\"bi bi-exclamation-octagon-fill\"\r\n              style={{ marginRight: \"5px\" }}\r\n            ></i>\r\n            <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n              No Tournaments\r\n            </h6>\r\n          </div> */}\r\n          {buildUpComingTournaments()}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export function Lessons(): JSX.Element {\r\n  // tslint:disable-next-line: typedef\r\n  const buildUpComingLessons = () => {\r\n    let lessons: JSX.Element[] = [];\r\n    // tslint:disable-next-line: typedef\r\n    const upcomingLessons = JSON.parse(\r\n      localStorage.getItem(\"upcoming\") || \"{}\"\r\n    ).lessons;\r\n\r\n    if (upcomingLessons.length === 0) {\r\n      lessons = [\r\n        ...lessons,\r\n        <div\r\n          className=\"d-flex justify-content-center text-danger\"\r\n          style={{ fontSize: \"22px\" }}\r\n        >\r\n          <i\r\n            className=\"bi bi-exclamation-octagon-fill\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n          <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n            No Lessons\r\n          </h6>\r\n        </div>,\r\n      ];\r\n    } else {\r\n      for (const lesson of upcomingLessons) {\r\n        const div: JSX.Element = (\r\n          <div key={lesson.title} className=\"item d-flex flex-column mt-2\">\r\n            <div className=\"title\">{`${lesson.title}`} &nbsp;</div>\r\n            <div className=\"text-muted d-flex justify-content-between\">\r\n              <div>{lesson.subTitle}</div>\r\n              {lesson.instructor !== undefined ? (\r\n                <div>\r\n                  <i\r\n                    className=\"bi bi-person-fill mr-2\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"left\"\r\n                    title=\"Instructor\"\r\n                  />\r\n                  {lesson.instructor}\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div>\r\n                <i className=\"bi bi-calendar mr-2\" />\r\n                {lesson.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        lessons = [...lessons, div];\r\n      }\r\n    }\r\n\r\n    return lessons;\r\n  };\r\n  return (\r\n    <div className=\"p-2\">\r\n      <h4>Upcoming Lessons</h4>\r\n      <>{buildUpComingLessons()}</>\r\n    </div>\r\n  );\r\n}\r\n","export function Tournament(): JSX.Element {\r\n  // tslint:disable-next-line: typedef\r\n  const buildUpComingTournaments = () => {\r\n    let tournaments: JSX.Element[] = [];\r\n    // tslint:disable-next-line: typedef\r\n    const upcomingTournaments = JSON.parse(\r\n      localStorage.getItem(\"upcoming\") || \"{}\"\r\n    ).tournaments;\r\n\r\n    if (upcomingTournaments.length === 0) {\r\n      tournaments = [\r\n        ...tournaments,\r\n        <div\r\n          className=\"d-flex justify-content-center text-danger\"\r\n          style={{ fontSize: \"22px\" }}\r\n        >\r\n          <i\r\n            className=\"bi bi-exclamation-octagon-fill\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n          <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n            No Tournaments\r\n          </h6>\r\n        </div>,\r\n      ];\r\n    } else {\r\n      for (const tournament of upcomingTournaments) {\r\n        const div: JSX.Element = (\r\n          <div key={tournament.title} className=\"item d-flex flex-column mt-2\">\r\n            <div className=\"title\">{`${tournament.title}`} &nbsp;</div>\r\n            <div className=\"text-muted d-flex justify-content-between\">\r\n              <div>{tournament.subTitle}</div>\r\n              <div>\r\n                <i className=\"bi bi-calendar mr-2\" />\r\n                {tournament.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        tournaments = [...tournaments, div];\r\n      }\r\n    }\r\n\r\n    return tournaments;\r\n  };\r\n  return (\r\n    <div className=\"p-2\">\r\n      <h4>Upcoming Tournaments</h4>\r\n      <>{buildUpComingTournaments()}</>\r\n    </div>\r\n  );\r\n}\r\n","export function Image() {\r\n  return (\r\n    <>\r\n      <svg\r\n        version=\"1.0\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"50.000000pt\"\r\n        height=\"50.000000pt\"\r\n        viewBox=\"0 0 50.000000 50.000000\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n      >\r\n        <metadata>\r\n          Created by potrace 1.16, written by Peter Selinger 2001-2019\r\n        </metadata>\r\n        <g\r\n          transform=\"translate(0.000000,50.000000) scale(0.009766,-0.009766)\"\r\n          fill=\"#000000\"\r\n          stroke=\"none\"\r\n        >\r\n          <path\r\n            d=\"M1235 5106 c-116 -37 -207 -116 -258 -224 l-32 -67 -3 -1167 -2\r\n-1168 -358 0 c-355 0 -357 0 -408 -24 -65 -30 -120 -85 -150 -150 l-24 -51 0\r\n-475 0 -475 24 -51 c46 -100 152 -174 249 -174 l47 0 0 -125 c0 -120 1 -127\r\n24 -150 29 -29 66 -40 103 -30 17 4 87 65 178 156 l151 149 81 0 82 0 3 -387\r\n3 -388 32 -67 c41 -88 113 -160 201 -201 l67 -32 1315 0 1315 0 67 32 c88 41\r\n160 113 201 201 l32 67 3 1188 2 1187 82 0 82 0 151 -149 c91 -91 161 -152\r\n177 -156 38 -10 75 1 104 30 23 23 24 30 24 150 l0 125 48 0 c96 0 202 74 248\r\n174 l24 51 0 475 0 475 -24 51 c-30 65 -85 120 -150 150 -51 24 -53 24 -408\r\n24 l-357 0 -3 368 -3 367 -32 67 c-41 88 -113 160 -201 201 l-67 32 -1300 2\r\nc-1031 1 -1308 -1 -1340 -11z m2620 -208 c17 -9 43 -29 59 -44 54 -55 60 -78\r\n64 -231 l4 -143 -496 0 c-532 0 -535 0 -562 -51 -27 -52 -8 -115 41 -137 19\r\n-9 158 -12 520 -12 l495 0 0 -100 0 -99 -647 -3 -648 -3 -47 -23 c-60 -30\r\n-119 -89 -149 -150 l-24 -47 0 -475 0 -475 24 -47 c30 -61 89 -120 149 -150\r\nl47 -23 648 -3 647 -3 0 -919 0 -920 -1420 0 -1420 0 0 120 0 119 648 3 647 3\r\n46 23 c61 30 113 81 147 145 l27 52 0 475 0 475 -27 52 c-34 64 -86 115 -147\r\n145 l-46 23 -647 3 -648 3 0 899 0 900 495 0 c531 0 534 0 561 51 27 52 8 115\r\n-41 137 -19 9 -158 12 -520 12 l-495 0 0 123 c0 67 4 137 10 156 19 69 80 131\r\n146 151 16 5 592 8 1279 7 1143 -2 1253 -3 1280 -19z m1001 -1033 c63 -26 64\r\n-35 64 -485 0 -450 -1 -459 -64 -485 -21 -9 -68 -15 -116 -15 -77 0 -83 -2\r\n-111 -29 -24 -24 -29 -38 -29 -77 l0 -47 -80 77 -80 76 -842 0 c-783 0 -846 1\r\n-878 18 -57 28 -59 42 -59 482 0 440 2 454 59 482 33 17 105 18 1068 18 884 0\r\n1038 -2 1068 -15z m-2429 -1618 l28 -27 3 -428 c2 -413 2 -428 -18 -460 -11\r\n-18 -32 -37 -46 -42 -16 -6 -344 -10 -866 -10 l-840 0 -84 -82 -84 -82 0 43\r\nc0 48 -21 95 -47 107 -10 4 -62 10 -116 14 -89 5 -99 8 -125 33 l-27 27 0 439\r\nc0 425 1 440 20 461 11 12 29 26 40 31 11 4 496 7 1077 6 l1058 -2 27 -28z\r\nm1551 -1749 c-4 -154 -10 -177 -64 -232 -67 -66 42 -61 -1354 -61 -1396 0\r\n-1287 -5 -1354 61 -54 55 -60 78 -64 232 l-4 142 1422 0 1422 0 -4 -142z\"\r\n          />\r\n          <path\r\n            d=\"M2511 4466 c-87 -48 -50 -186 49 -186 51 0 100 49 100 99 0 75 -83\r\n124 -149 87z\"\r\n          />\r\n          <path\r\n            d=\"M2927 3656 c-30 -28 -42 -65 -33 -102 4 -14 19 -37 33 -50 l26 -24\r\n839 0 839 0 24 24 c45 45 45 107 0 152 l-24 24 -839 0 -839 0 -26 -24z\"\r\n          />\r\n          <path\r\n            d=\"M2927 3256 c-30 -28 -42 -65 -33 -102 4 -14 19 -37 33 -50 l26 -24\r\n309 0 309 0 24 24 c45 45 45 107 0 152 l-24 24 -309 0 -309 0 -26 -24z\"\r\n          />\r\n          <path\r\n            d=\"M3949 3251 c-23 -23 -29 -38 -29 -71 0 -33 6 -48 29 -71 l29 -29 327\r\n0 326 0 24 24 c45 45 45 107 0 152 l-24 24 -326 0 -327 0 -29 -29z\"\r\n          />\r\n          <path\r\n            d=\"M774 1870 c-54 -21 -72 -105 -34 -153 41 -52 136 -44 165 14 46 89\r\n-37 177 -131 139z\"\r\n          />\r\n          <path\r\n            d=\"M1285 1868 c-74 -40 -73 -139 2 -177 62 -32 143 18 143 88 0 73 -83\r\n124 -145 89z\"\r\n          />\r\n          <path\r\n            d=\"M1791 1866 c-87 -48 -50 -186 49 -186 51 0 100 49 100 99 0 75 -83\r\n124 -149 87z\"\r\n          />\r\n          <path\r\n            d=\"M2514 510 c-55 -22 -72 -108 -31 -155 14 -17 36 -28 63 -32 36 -5 46\r\n-1 75 25 28 25 34 37 34 72 0 72 -72 118 -141 90z\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Image } from \"./image\";\r\nimport \"./Message.css\";\r\n\r\nexport function Messages(): JSX.Element {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgs, setMsgs] = useState<JSX.Element[]>([]);\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const buildMessage = () => {\r\n    const messages: JSX.Element[] = [\r\n      ...msgs,\r\n      <div className=\"msgWrapper you\" id={(Math.random() * 10000).toString()}>\r\n        <div className=\"message\">\r\n          <div className=\"text-white member\">Me</div>\r\n          <div className=\"bubble\">{msg}</div>\r\n        </div>\r\n      </div>,\r\n      <div className=\"msgWrapper other\" id={(Math.random() * 10000).toString()}>\r\n        <div className=\"message\">\r\n          <div className=\"text-white member\">Instructor John John</div>\r\n          <div className=\"bubble\">\r\n            This is an automated message - realtime chat feature not implemented\r\n          </div>\r\n        </div>\r\n      </div>,\r\n    ];\r\n    setMsg(\"\");\r\n    setMsgs(messages);\r\n  };\r\n\r\n  return (\r\n    <div id=\"messageRoot\">\r\n      <h5>Messages</h5>\r\n      <div id=\"messageDiv\" className=\"d-flex\">\r\n        <div id=\"messageAside\">\r\n          <div id=\"1\" className=\"d-flex viewing\">\r\n            <div>\r\n              <Image />\r\n            </div>\r\n            <div className=\"messageTile\">Instructor: John John</div>\r\n          </div>\r\n        </div>\r\n        <div id=\"messageView\">\r\n          <div id=\"messageList\">\r\n            <div\r\n              className=\"msgWrapper you\"\r\n              id={(Math.random() * 10000).toString()}\r\n            >\r\n              <div className=\"message\">\r\n                <div className=\"text-white member\">Me</div>\r\n                <div className=\"bubble\">Hello</div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"msgWrapper other\"\r\n              id={(Math.random() * 10000).toString()}\r\n            >\r\n              <div className=\"message\">\r\n                <div className=\"text-white member\">Instructor John John</div>\r\n                <div className=\"bubble\">Hi Derek</div>\r\n              </div>\r\n            </div>\r\n            {msgs}\r\n          </div>\r\n          <div id=\"messageTextBox\" className=\"d-flex\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter message...\"\r\n              value={msg}\r\n              onKeyPress={(evt) => {\r\n                if (evt.key === \"Enter\") {\r\n                  buildMessage();\r\n                }\r\n              }}\r\n              onChange={(evt) => {\r\n                setMsg(evt.target.value);\r\n              }}\r\n            />\r\n            <Button variant=\"success\" onClick={buildMessage}>\r\n              <i className=\"bi bi-arrow-up-square-fill\"></i>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\n\r\nexport function AddressInfo(props: any): JSX.Element {\r\n  // tslint:disable-next-line: typedef\r\n  const resetAddr = props.address;\r\n  const [address, setAddress] = useState<{\r\n    streetName: string;\r\n    city: string;\r\n    postalCode: string;\r\n    country: string;\r\n    unitOrHouseNumber: number;\r\n  }>(props.address);\r\n  const [addressValid, setAddressValid] = useState({\r\n    streetName: true,\r\n    city: true,\r\n    postalCode: true,\r\n    country: true,\r\n    unitOrHouseNumber: true,\r\n  });\r\n  return (\r\n    <div>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !addressValid.unitOrHouseNumber\r\n              ? \"House number cannot be empty\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !addressValid.unitOrHouseNumber ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            #\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!addressValid.unitOrHouseNumber ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${address.unitOrHouseNumber}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...address, unitOrHouseNumber: +evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...addressValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.unitOrHouseNumber = false;\r\n              } else {\r\n                tempValid.unitOrHouseNumber = true;\r\n              }\r\n\r\n              setAddress(temp);\r\n              setAddressValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !addressValid.streetName ? \"Name value cannot be empty\" : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !addressValid.streetName ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"bi bi-signpost\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!addressValid.streetName ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${address.streetName}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...address, streetName: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...addressValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.streetName = false;\r\n              } else {\r\n                tempValid.streetName = true;\r\n              }\r\n\r\n              setAddress(temp);\r\n              setAddressValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${!addressValid.city ? \"City cannot be empty\" : \"\"}`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!addressValid.city ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            <i className=\"bi bi-building\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!addressValid.city ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${address.city}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...address, city: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...addressValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.city = false;\r\n              } else {\r\n                tempValid.city = true;\r\n              }\r\n\r\n              setAddress(temp);\r\n              setAddressValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${!addressValid.country ? \"Country cannot be empty\" : \"\"}`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!addressValid.country ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            <i className=\"bi bi-geo-fill\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!addressValid.country ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${address.country}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...address, country: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...addressValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.country = false;\r\n              } else {\r\n                tempValid.country = true;\r\n              }\r\n\r\n              setAddress(temp);\r\n              setAddressValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !addressValid.postalCode\r\n              ? \"Postal code cannot be empty Format H0H 0H0\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !addressValid.postalCode ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"bi bi-mailbox\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!addressValid.postalCode ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${address.postalCode}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...address, postalCode: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...addressValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.postalCode = false;\r\n              } else {\r\n                tempValid.postalCode = true;\r\n              }\r\n\r\n              setAddress(temp);\r\n              setAddressValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      {!props.disabled ? (\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              // tslint:disable-next-line: typedef\r\n              let profile = props.profile;\r\n              Object.assign(profile, resetAddr);\r\n\r\n              setAddress(resetAddr);\r\n              setAddressValid({\r\n                streetName: true,\r\n                city: true,\r\n                postalCode: true,\r\n                country: true,\r\n                unitOrHouseNumber: true,\r\n              });\r\n\r\n              props.save(profile);\r\n              props.close();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={\r\n              !(\r\n                addressValid.city &&\r\n                addressValid.country &&\r\n                addressValid.postalCode &&\r\n                addressValid.streetName &&\r\n                addressValid.unitOrHouseNumber\r\n              )\r\n            }\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              // tslint:disable-next-line: typedef\r\n              let profile = props.profile;\r\n              Object.assign(profile, address);\r\n              props.save(profile);\r\n              props.close();\r\n            }}\r\n          >\r\n            Save User Information\r\n          </Button>\r\n        </Modal.Footer>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\n\r\nexport function PaymentInfo(props: any): JSX.Element {\r\n  // tslint:disable-next-line: typedef\r\n  const resetCard = props.cardInfo;\r\n  const [cardInfo, setCardInfo] = useState<{\r\n    cardNumber: string;\r\n    cvv2: number;\r\n    exp: string;\r\n  }>(props.cardInfo);\r\n  const [cardInfoValid, setcardInfoValid] = useState({\r\n    cardNumber: true,\r\n    cvv2: true,\r\n    exp: true,\r\n  });\r\n  const [showCard, setCard] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !cardInfoValid.cardNumber\r\n              ? \"Card number cannot be empty and must be within 13 to 16 numbers in length\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !cardInfoValid.cardNumber ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"bi bi-credit-card-2-front\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!cardInfoValid.cardNumber ? \"error\" : \"\"}`}\r\n            disabled={!props.disabled && showCard ? false : true}\r\n            value={`${\r\n              !showCard\r\n                ? cardInfo.cardNumber\r\n                    .split(\"\")\r\n                    .map((val: string, ind: number, arr: string[]) => {\r\n                      if (ind >= arr.length - 4) {\r\n                        return val;\r\n                      }\r\n                      return \"*\";\r\n                    })\r\n                    .join(\"\")\r\n                : cardInfo.cardNumber\r\n            }`}\r\n            onChange={\r\n              !props.disabled && !showCard\r\n                ? (evt) => {\r\n                    // tslint:disable-next-line: typedef\r\n                    let temp = { ...cardInfo, cardNumber: evt.target.value };\r\n                    // tslint:disable-next-line: typedef\r\n                    let tempValid = { ...cardInfoValid };\r\n                    if (evt.target.value === \"\") {\r\n                      tempValid.cardNumber = false;\r\n                    } else {\r\n                      tempValid.cardNumber = true;\r\n                    }\r\n\r\n                    setCardInfo(temp);\r\n                    setcardInfoValid(tempValid);\r\n                  }\r\n                : // tslint:disable-next-line: no-empty\r\n                  () => {}\r\n            }\r\n          />\r\n          <Button\r\n            variant=\"outline-success\"\r\n            onClick={() => {\r\n              setCard(!showCard);\r\n            }}\r\n          >\r\n            <i className=\"bi bi-eye-fill\"></i>\r\n          </Button>\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !cardInfoValid.cvv2\r\n              ? \"Cvv2 number cannot be empty and typically 3 numbers in length\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!cardInfoValid.cvv2 ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            <i className=\"bi bi-credit-card-2-back\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!cardInfoValid.cvv2 ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${cardInfo.cvv2}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...cardInfo, cvv2: +evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...cardInfoValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.cvv2 = false;\r\n              } else {\r\n                tempValid.cvv2 = true;\r\n              }\r\n\r\n              setCardInfo(temp);\r\n              setcardInfoValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !cardInfoValid.exp ? \"Exp value cannot be empty, format MM/YY\" : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!cardInfoValid.exp ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            MM/YY\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!cardInfoValid.exp ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${cardInfo.exp}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...cardInfo, exp: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...cardInfoValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.exp = false;\r\n              } else {\r\n                tempValid.exp = true;\r\n              }\r\n\r\n              setCardInfo(temp);\r\n              setcardInfoValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      {!props.disabled ? (\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              // tslint:disable-next-line: typedef\r\n              let profile = props.profile;\r\n              Object.assign(profile, resetCard);\r\n\r\n              setCardInfo(resetCard);\r\n              setcardInfoValid({\r\n                cardNumber: true,\r\n                cvv2: true,\r\n                exp: true,\r\n              });\r\n\r\n              props.save(profile);\r\n              props.close();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={\r\n              !(\r\n                cardInfoValid.cardNumber &&\r\n                cardInfoValid.cvv2 &&\r\n                cardInfoValid.exp\r\n              )\r\n            }\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              // tslint:disable-next-line: typedef\r\n              let profile = props.profile;\r\n              Object.assign(profile, cardInfo);\r\n              props.save(profile);\r\n              props.close();\r\n            }}\r\n          >\r\n            Save User Information\r\n          </Button>\r\n        </Modal.Footer>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { useState } from \"react\";\r\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\r\n\r\nexport function UserInfo(props: any): JSX.Element {\r\n  const resetProfile: {\r\n    name: string;\r\n    memberID: number;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    phoneNumber: string;\r\n    dob: string;\r\n  } = props.profile;\r\n\r\n  const [profile, setProfile] = useState<{\r\n    name: string;\r\n    memberID: number;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    phoneNumber: string;\r\n    dob: string;\r\n  }>(props.profile);\r\n\r\n  const [profileValid, setProfileValid] = useState({\r\n    name: true,\r\n    username: true,\r\n    email: true,\r\n    password: true,\r\n    phoneNumber: true,\r\n    dob: true,\r\n  });\r\n  const [showPassword, setPassowrd] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <InputGroup\r\n          className={`mb-3`}\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${!profileValid.name ? \"Name value cannot be empty\" : \"\"}`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!profileValid.name ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            Name\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!profileValid.name ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${profile.name}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...profile, name: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...profileValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.name = false;\r\n              } else {\r\n                tempValid.name = true;\r\n              }\r\n\r\n              setProfile(temp);\r\n              setProfileValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text id=\"basic-addon1\">ID</InputGroup.Text>\r\n          <FormControl disabled={true} value={`${props.profile.memberID}`} />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !profileValid.username ? \"Username value cannot be empty\" : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !profileValid.username ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"bi bi-person\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!profileValid.username ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${profile.username}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...profile, username: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...profileValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.username = false;\r\n              } else {\r\n                tempValid.username = true;\r\n              }\r\n\r\n              setProfile(temp);\r\n              setProfileValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !profileValid.email\r\n              ? \"Email value cannot be empty and must be a valid email (person@domain.com)\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!profileValid.email ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            @\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!profileValid.email ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${profile.email}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...profile, email: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...profileValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.email = false;\r\n              } else {\r\n                tempValid.email = true;\r\n              }\r\n\r\n              setProfile(temp);\r\n              setProfileValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !profileValid.password ? \"Password value cannot be empty\" : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !profileValid.password ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"bi bi-key-fill\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!profileValid.password ? \"error\" : \"\"}`}\r\n            disabled={!props.disabled && showPassword ? false : true}\r\n            value={`${\r\n              !showPassword\r\n                ? profile.password\r\n                    .split(\"\")\r\n                    .map((val: string, ind: number, arr: string[]) => {\r\n                      return \"*\";\r\n                    })\r\n                    .join(\"\")\r\n                : profile.password\r\n            }`}\r\n            onChange={\r\n              !props.disabled && showPassword\r\n                ? (evt) => {\r\n                    // tslint:disable-next-line: typedef\r\n                    let temp = { ...profile, password: evt.target.value };\r\n                    // tslint:disable-next-line: typedef\r\n                    let tempValid = { ...profileValid };\r\n                    if (evt.target.value === \"\") {\r\n                      tempValid.password = false;\r\n                    } else {\r\n                      tempValid.password = true;\r\n                    }\r\n\r\n                    setProfile(temp);\r\n                    setProfileValid(tempValid);\r\n                  }\r\n                : // tslint:disable-next-line: no-empty\r\n                  () => {}\r\n            }\r\n          />\r\n          <Button\r\n            variant=\"outline-success\"\r\n            onClick={() => {\r\n              setPassowrd(!showPassword);\r\n            }}\r\n          >\r\n            <i className=\"bi bi-eye-fill\"></i>\r\n          </Button>\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !profileValid.phoneNumber\r\n              ? \"Phone number value cannot be empty. Format xxx-xxx-xxxx\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${\r\n              !profileValid.phoneNumber ? \"bg-danger text-white\" : \"\"\r\n            }`}\r\n          >\r\n            <i className=\"bi bi-telephone-fill\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!profileValid.phoneNumber ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${profile.phoneNumber}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...profile, phoneNumber: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...profileValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.phoneNumber = false;\r\n              } else {\r\n                tempValid.phoneNumber = true;\r\n              }\r\n\r\n              setProfile(temp);\r\n              setProfileValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      <>\r\n        <InputGroup\r\n          className=\"mb-3\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title={`${\r\n            !profileValid.dob\r\n              ? \"Date of birth value cannot be empty. Format dd/MM/YY\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <InputGroup.Text\r\n            id=\"basic-addon1\"\r\n            className={`${!profileValid.dob ? \"bg-danger text-white\" : \"\"}`}\r\n          >\r\n            <i className=\"bi bi-calendar3\"></i>\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            className={`${!profileValid.dob ? \"error\" : \"\"}`}\r\n            disabled={props.disabled}\r\n            value={`${profile.dob}`}\r\n            onChange={(evt) => {\r\n              // tslint:disable-next-line: typedef\r\n              let temp = { ...profile, dob: evt.target.value };\r\n              // tslint:disable-next-line: typedef\r\n              let tempValid = { ...profileValid };\r\n              if (evt.target.value === \"\") {\r\n                tempValid.dob = false;\r\n              } else {\r\n                tempValid.dob = true;\r\n              }\r\n\r\n              setProfile(temp);\r\n              setProfileValid(tempValid);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </>\r\n      {!props.disabled ? (\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              setProfile(resetProfile);\r\n              setProfileValid({\r\n                name: true,\r\n                username: true,\r\n                email: true,\r\n                password: true,\r\n                phoneNumber: true,\r\n                dob: true,\r\n              });\r\n              props.save(resetProfile);\r\n              props.close();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={\r\n              !(\r\n                profileValid.name &&\r\n                profileValid.username &&\r\n                profileValid.email &&\r\n                profileValid.password &&\r\n                profileValid.phoneNumber &&\r\n                profileValid.dob\r\n              )\r\n            }\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              props.save(profile);\r\n              props.close();\r\n            }}\r\n          >\r\n            Save User Information\r\n          </Button>\r\n        </Modal.Footer>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Card, Modal, ToggleButton } from \"react-bootstrap\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport { Image } from \"../messages/image\";\r\nimport { AddressInfo } from \"./addr-info/AddressInfo\";\r\nimport { PaymentInfo } from \"./pay-info/PaymentInfo\";\r\nimport \"./Profile.css\";\r\nimport { UserInfo } from \"./user-info/UserInfo\";\r\n\r\n// attribution: Image attribution to depositphotos.com\r\n\r\nexport function Profile(): JSX.Element {\r\n  const [profile, setProfile] = useState({\r\n    name: \"Derek Morgan\",\r\n    memberID: 9507980.47961887,\r\n    username: \"derek.morgan\",\r\n    email: \"derek.morgan@fbi.com\",\r\n    password: \"not-secure-password@fake-data\",\r\n    phoneNumber: \"111-222-3333\",\r\n    dob: \"12/12/00\",\r\n    address: {\r\n      streetName: \"Some Street St\",\r\n      city: \"Some City\",\r\n      postalCode: \"H0H 0H0\",\r\n      country: \"Some Country\",\r\n      unitOrHouseNumber: 12,\r\n    },\r\n    cardInfo: {\r\n      cardNumber: \"4444 4444 4444 4444\",\r\n      cvv2: 444,\r\n      exp: \"04/04\",\r\n    },\r\n  });\r\n  const [userEdit, setUserEdit] = useState(false);\r\n  const [addrEdit, setAddrEdit] = useState(false);\r\n  const [paymEdit, setPaymEdit] = useState(false);\r\n  return (\r\n    <div id=\"profileRoot\">\r\n      <div id=\"profileImage\">\r\n        <i className=\"bi bi-person-badge\" style={{ fontSize: \"100px\" }}></i>\r\n        <div className=\"text-muted fw-bold\">\r\n          {profile.name} &middot; {profile.memberID}\r\n        </div>\r\n      </div>\r\n      <div id=\"accordions\">\r\n        <Accordion>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n              User Information\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n              <Card.Body>\r\n                <div className=\"header-edit mb-2\">\r\n                  <Button\r\n                    disabled={userEdit}\r\n                    variant=\"outline-info\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"top\"\r\n                    title=\"Edit User Information\"\r\n                    onClick={() => setUserEdit(true)}\r\n                  >\r\n                    <i className=\"bi bi-pencil-fill\"></i>Edit\r\n                  </Button>\r\n                </div>\r\n                <UserInfo\r\n                  disabled={!userEdit}\r\n                  profile={profile}\r\n                  close={() => setUserEdit(false)}\r\n                  save={setProfile}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n              Address Information\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body>\r\n                <div className=\"header-edit mb-2\">\r\n                  <Button\r\n                    disabled={addrEdit}\r\n                    variant=\"outline-info\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"top\"\r\n                    title=\"Edit User Information\"\r\n                    onClick={() => setAddrEdit(true)}\r\n                  >\r\n                    <i className=\"bi bi-pencil-fill\"></i>Edit\r\n                  </Button>\r\n                </div>\r\n                <AddressInfo\r\n                  disabled={!addrEdit}\r\n                  address={profile.address}\r\n                  profile={profile}\r\n                  close={() => setAddrEdit(false)}\r\n                  save={setProfile}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n              Payment Information\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body>\r\n                <div className=\"header-edit mb-2\">\r\n                  <Button\r\n                    disabled={paymEdit}\r\n                    variant=\"outline-info\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"top\"\r\n                    title=\"Edit User Information\"\r\n                    onClick={() => setPaymEdit(true)}\r\n                  >\r\n                    <i className=\"bi bi-pencil-fill\"></i>Edit\r\n                  </Button>\r\n                </div>\r\n                <PaymentInfo\r\n                  disabled={!paymEdit}\r\n                  cardInfo={profile.cardInfo}\r\n                  profile={profile}\r\n                  close={() => setPaymEdit(false)}\r\n                  save={setProfile}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  FormControl,\r\n  InputGroup,\r\n  Modal,\r\n  Row,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\nimport \"./Search.css\";\r\n\r\n// left at selecting an item from the autocomplete list and adding them to cart\r\n\r\nexport function Search(): JSX.Element {\r\n  const filtersDiv: React.RefObject<HTMLDivElement> =\r\n    useRef<HTMLDivElement>(null);\r\n  const completionListDiv: React.RefObject<HTMLDivElement> =\r\n    useRef<HTMLDivElement>(null);\r\n  const cardListDiv: React.RefObject<HTMLDivElement> =\r\n    useRef<HTMLDivElement>(null);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [showCart, setShowCart] = useState(false);\r\n  const [selectedFilters, setSelectedFilters] = useState<string[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [cart, setCart] = useState<\r\n    {\r\n      lessons: boolean;\r\n      tournament: boolean;\r\n      title: string;\r\n      subTitle: string;\r\n      instructor: string | undefined;\r\n      date: string;\r\n      price: string | undefined;\r\n    }[]\r\n  >([\r\n    {\r\n      lessons: true,\r\n      tournament: false,\r\n      title: \"Novice Bump and Set Lessons\",\r\n      subTitle: \"Bump lessons for beginners\",\r\n      instructor: \"John John\",\r\n      date: \"July 27, 2021 - July 30, 2021\",\r\n      price: \"$100\",\r\n    },\r\n    {\r\n      lessons: true,\r\n      tournament: false,\r\n      title: \"Advanced (Final) Bump and Set Lessons\",\r\n      subTitle: \"Bump lessons for those coming from intermediate classes\",\r\n      instructor: \"John John\",\r\n      date: \"August 10, 2021 - August 13, 2021\",\r\n      price: \"$100\",\r\n    },\r\n    {\r\n      lessons: false,\r\n      tournament: true,\r\n      title: \"Tournament - Intermediate challenge\",\r\n      subTitle: \"Tournament for intermediate members in the club\",\r\n      date: \"August 13, 2021\",\r\n      instructor: undefined,\r\n      price: undefined,\r\n    },\r\n  ]);\r\n  const [autocomplete, setAutocomplete] = useState<JSX.Element[]>([]);\r\n  const [cartItems, setCartItems] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(() => {\r\n    // tslint:disable-next-line: typedef\r\n    const search = [\r\n      {\r\n        lessons: true,\r\n        tournament: false,\r\n        title: \"Novice Bump and Set Lessons\",\r\n        subTitle: \"Bump lessons for beginners\",\r\n        instructor: \"John John\",\r\n        date: \"July 27, 2021 - July 30, 2021\",\r\n        price: \"$100\",\r\n      },\r\n      {\r\n        lessons: true,\r\n        tournament: false,\r\n        title: \"Intermediate Bump and Set Lessons\",\r\n        subTitle: \"Bump lessons for those coming from novice classes\",\r\n        instructor: \"John John\",\r\n        date: \"August 2, 2021 - August 5, 2021\",\r\n        price: \"$100\",\r\n      },\r\n      {\r\n        lessons: true,\r\n        tournament: false,\r\n        title: \"Advanced (Final) Bump and Set Lessons\",\r\n        subTitle: \"Bump lessons for those coming from intermediate classes\",\r\n        instructor: \"John John\",\r\n        date: \"August 10, 2021 - August 13, 2021\",\r\n        price: \"$100\",\r\n      },\r\n      {\r\n        lessons: true,\r\n        tournament: false,\r\n        title: \"Spikes Learn to Play\",\r\n        subTitle: \"Learn to play the game of volleyball from form to rules\",\r\n        instructor: \"John John\",\r\n        date: \"August 19, 2021 - August 24, 2021\",\r\n        price: \"$150\",\r\n      },\r\n      {\r\n        lessons: false,\r\n        tournament: true,\r\n        title: \"Tournament - Beginners challenge\",\r\n        subTitle: \"Tournament for beginners in the club\",\r\n        instructor: undefined,\r\n        date: \"July 26, 2021\",\r\n        price: undefined,\r\n      },\r\n      {\r\n        lessons: false,\r\n        tournament: true,\r\n        title: \"Tournament - Beginners vs Advanced challenge\",\r\n        subTitle:\r\n          \"Tournament for beginners versus the advanced members in the club\",\r\n        instructor: undefined,\r\n        date: \"July 30, 2021\",\r\n        price: undefined,\r\n      },\r\n      {\r\n        lessons: false,\r\n        tournament: true,\r\n        title: \"Tournament - Intermediate challenge\",\r\n        subTitle: \"Tournament for intermediate members in the club\",\r\n        instructor: undefined,\r\n        date: \"August 13, 2021\",\r\n        price: undefined,\r\n      },\r\n      {\r\n        lessons: false,\r\n        tournament: true,\r\n        title: \"Tournament - Members vs Outsiders\",\r\n        subTitle:\r\n          \"Tournament for members and non-members who want to participate\",\r\n        instructor: undefined,\r\n        date: \"August 10, 2021\",\r\n        price: undefined,\r\n      },\r\n    ];\r\n    const filters: string[] = [\"lessons\", \"tournaments\"];\r\n\r\n    localStorage.setItem(\"search\", JSON.stringify(search));\r\n    localStorage.setItem(\"filters\", JSON.stringify(filters));\r\n  }, []);\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const buildCartItems = (crt: any) => {\r\n    // tslint:disable-next-line: typedef\r\n    const tempCart = [...crt];\r\n\r\n    if (tempCart.length === 0) {\r\n      setCartItems([\r\n        <div\r\n          className=\"d-flex justify-content-center text-danger\"\r\n          style={{ fontSize: \"22px\" }}\r\n        >\r\n          <i\r\n            className=\"bi bi-exclamation-octagon-fill\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n          <h6 className=\"d-flex justify-content-center align-items-center m-0\">\r\n            No Items In Your Cart\r\n          </h6>\r\n        </div>,\r\n      ]);\r\n    } else {\r\n      let cardItemsDiv: JSX.Element[] = [];\r\n      for (const tempCartItem of tempCart) {\r\n        const div: JSX.Element = (\r\n          <div\r\n            key={tempCartItem.title}\r\n            className=\"item d-flex flex-column mt-2\"\r\n          >\r\n            <div className=\"title\">\r\n              {`${tempCartItem.title}`} &nbsp;\r\n              {tempCartItem.price !== undefined ? (\r\n                <i\r\n                  className=\"bi bi-currency-dollar\"\r\n                  data-bs-toggle=\"tooltip\"\r\n                  data-bs-placement=\"right\"\r\n                  title=\"Payment required\"\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <div className=\"text-muted d-flex justify-content-between\">\r\n              <div>{tempCartItem.subTitle}</div>\r\n              {tempCartItem.instructor !== undefined ? (\r\n                <div>\r\n                  <i\r\n                    className=\"bi bi-person-fill mr-2\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"left\"\r\n                    title=\"Instructor\"\r\n                  />\r\n                  {tempCartItem.instructor}\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div>\r\n                <i className=\"bi bi-calendar mr-2\" />\r\n                {tempCartItem.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        cardItemsDiv = [...cardItemsDiv, div];\r\n      }\r\n\r\n      setCartItems(cardItemsDiv);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(cart);\r\n    buildCartItems(cart);\r\n  }, [cart]);\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const handleSearchItemClicked = (item: any) => {\r\n    setCart([...cart, item]);\r\n  };\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const updateSearchList = (term: string) => {\r\n    let getSearchStuff: {\r\n      lessons: boolean;\r\n      tournament: boolean;\r\n      title: string;\r\n      subTitle: string;\r\n      instructor: string | undefined;\r\n      date: string;\r\n      price: string | undefined;\r\n    }[] = JSON.parse(localStorage.getItem(\"search\") || \"[]\");\r\n\r\n    getSearchStuff = getSearchStuff.filter((value) =>\r\n      value.title.toLowerCase().includes(term)\r\n    );\r\n\r\n    if (selectedFilters.includes(\"lessons\")) {\r\n      getSearchStuff = getSearchStuff.filter((value) => value.lessons);\r\n    }\r\n\r\n    if (selectedFilters.includes(\"tournaments\")) {\r\n      getSearchStuff = getSearchStuff.filter((value) => value.tournament);\r\n    }\r\n\r\n    let searchDivs: JSX.Element[] = [];\r\n    for (const searchItems of getSearchStuff) {\r\n      const div: JSX.Element = (\r\n        <div\r\n          key={searchItems.title}\r\n          className=\"item d-flex flex-column mt-2\"\r\n          onClick={() => {\r\n            console.log(`Clicked for ${searchItems.title}`);\r\n            handleSearchItemClicked(searchItems);\r\n          }}\r\n        >\r\n          <div className=\"title\">\r\n            {`${searchItems.title}`} &nbsp;\r\n            {searchItems.price !== undefined ? (\r\n              <i\r\n                className=\"bi bi-currency-dollar\"\r\n                data-bs-toggle=\"tooltip\"\r\n                data-bs-placement=\"right\"\r\n                title=\"Payment required\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"text-muted d-flex justify-content-between\">\r\n            <div>{searchItems.subTitle}</div>\r\n            {searchItems.instructor !== undefined ? (\r\n              <div>\r\n                <i\r\n                  className=\"bi bi-person-fill mr-2\"\r\n                  data-bs-toggle=\"tooltip\"\r\n                  data-bs-placement=\"left\"\r\n                  title=\"Instructor\"\r\n                />\r\n                {searchItems.instructor}\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div>\r\n              <i className=\"bi bi-calendar mr-2\" />\r\n              {searchItems.date}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      searchDivs = [...searchDivs, div];\r\n    }\r\n\r\n    setAutocomplete(searchDivs);\r\n  };\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const handleSearchChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(evt.target.value);\r\n    updateSearchList(evt.target.value);\r\n  };\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const builderFiltersBar = () => {\r\n    // tslint:disable-next-line: typedef\r\n    const filters = [...selectedFilters];\r\n\r\n    let filtersBar: JSX.Element[] = [];\r\n\r\n    for (let i: number = 0; i < filters.length; i++) {\r\n      const chip: JSX.Element = (\r\n        <div className=\"chip d-flex border border-danger mx-2\">\r\n          <div style={{ marginRight: \"10px\" }}>{filters[i]}</div>\r\n          <i\r\n            className=\"bi bi-x-circle-fill\"\r\n            onClick={() => {\r\n              // tslint:disable-next-line: typedef\r\n              const newFilters = selectedFilters.filter(\r\n                (val) => val !== filters[i]\r\n              );\r\n              setSelectedFilters(newFilters);\r\n              updateSearchList(searchTerm);\r\n            }}\r\n          ></i>\r\n        </div>\r\n      );\r\n\r\n      filtersBar = [...filtersBar, chip];\r\n    }\r\n\r\n    return filtersBar;\r\n  };\r\n\r\n  const [checkout, setCheckout] = useState(false);\r\n  // tslint:disable-next-line: typedef\r\n  const handleClose = () => setCheckout(false);\r\n  // tslint:disable-next-line: typedef\r\n  const handleShow = () => setCheckout(true);\r\n\r\n  const [toast, setToast] = useState(false);\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const resetCard = {\r\n    cardNumber: \"4444 4444 4444 4444\",\r\n    cvv2: \"444\",\r\n    exp: \"04/04\",\r\n  };\r\n  const [payment, setPayment] = useState({\r\n    cardNumber: \"4444 4444 4444 4444\",\r\n    cvv2: \"444\",\r\n    exp: \"04/04\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id=\"search\" className=\"d-flex\">\r\n        <input\r\n          placeholder=\"Enter search terms\"\r\n          type=\"text\"\r\n          onChange={handleSearchChange}\r\n        />\r\n        <div\r\n          id=\"searchBtn\"\r\n          className=\"bi bi-search btn btn-outline-success d-flex align-items-center\"\r\n        ></div>\r\n      </div>\r\n      <div id=\"filterWrapper\" className=\"bg-light border border-danger rounded\">\r\n        <div\r\n          id=\"filtersBar\"\r\n          className=\"d-flex justify-content-between align-items-center p-2 border-bottom border-danger\"\r\n        >\r\n          <div id=\"selected\" className=\"d-flex\" style={{ width: \"90%\" }}>\r\n            {builderFiltersBar()}\r\n          </div>\r\n          <div\r\n            id=\"filterModal\"\r\n            className=\"d-flex btn btn-outline-danger\"\r\n            onClick={() => {\r\n              if (!showFilters) {\r\n                setShowFilters(true);\r\n                if (filtersDiv.current) {\r\n                  filtersDiv.current.style.height = \"80px\";\r\n                  filtersDiv.current.style.overflow = \"auto\";\r\n                }\r\n              } else {\r\n                setShowFilters(false);\r\n                if (filtersDiv.current) {\r\n                  filtersDiv.current.style.height = \"0\";\r\n                  filtersDiv.current.style.overflow = \"hidden\";\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <i className=\"bi bi-funnel-fill\" />\r\n            <div>Filters</div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          ref={filtersDiv}\r\n          id=\"availableFilters\"\r\n          style={{\r\n            height: \"0\",\r\n            transition: \"all 300ms ease-in-out\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div key={`Filter Lesson`} className=\"mx-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`Lesson`}\r\n              id={`Lesson`}\r\n              checked={selectedFilters.includes(\"lessons\")}\r\n              onChange={(evt) => {\r\n                if (evt.target.checked) {\r\n                  setSelectedFilters([...selectedFilters, \"lessons\"]);\r\n                } else {\r\n                  // tslint:disable-next-line: typedef\r\n                  const newFilters = selectedFilters.filter(\r\n                    (val) => val !== \"lessons\"\r\n                  );\r\n                  setSelectedFilters(newFilters);\r\n                }\r\n              }}\r\n            />\r\n            <label\r\n              style={{\r\n                marginLeft: \"5px\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              htmlFor={`Lesson`}\r\n            >\r\n              {`Lesson`}\r\n            </label>\r\n          </div>\r\n          <div key={`Filter Tournament`} className=\"mx-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`Tournament`}\r\n              id={`Tournament`}\r\n              checked={selectedFilters.includes(\"tournaments\")}\r\n              onChange={(evt) => {\r\n                if (evt.target.checked) {\r\n                  setSelectedFilters([...selectedFilters, \"tournaments\"]);\r\n                } else {\r\n                  // tslint:disable-next-line: typedef\r\n                  const newFilters = selectedFilters.filter(\r\n                    (val) => val !== \"tournaments\"\r\n                  );\r\n                  setSelectedFilters(newFilters);\r\n                }\r\n              }}\r\n            />\r\n            <label\r\n              style={{\r\n                marginLeft: \"5px\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              htmlFor={`Tournament`}\r\n            >\r\n              {`Tournament`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"completionList\">\r\n        <div id=\"completionWrapper\">\r\n          <div className=\"d-flex justify-content-between align-items-center mx-2\">\r\n            <div className=\"text-info\" style={{ fontSize: \"18px\" }}>\r\n              <i className=\"bi bi-info-circle mr-2\" />\r\n              {\"Select an item to add it to cart\"}\r\n            </div>\r\n\r\n            <div className=\"d-flex\" style={{ gap: \"10px\" }}>\r\n              {showCart ? (\r\n                <div\r\n                  className=\"btn btn-outline-success\"\r\n                  style={{ fontSize: \"20px\" }}\r\n                  data-bs-toggle=\"tooltip\"\r\n                  data-bs-placement=\"top\"\r\n                  title=\"Proceed to Checkout\"\r\n                  onClick={handleShow}\r\n                >\r\n                  <i className=\"bi bi-bag-check\"></i>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div\r\n                className=\"btn btn-primary\"\r\n                style={{ fontSize: \"20px\" }}\r\n                data-bs-toggle=\"tooltip\"\r\n                data-bs-placement=\"top\"\r\n                title={showCart ? \"Close Cart View\" : \"Display Items in Cart\"}\r\n                onClick={() => {\r\n                  if (!showCart) {\r\n                    setShowCart(true);\r\n                    if (completionListDiv.current && cardListDiv.current) {\r\n                      completionListDiv.current.style.height = \"0\";\r\n                      completionListDiv.current.style.overflow = \"hidden\";\r\n                      cardListDiv.current.style.height = \"70vh\";\r\n                      cardListDiv.current.style.overflow = \"auto\";\r\n                    }\r\n                  } else {\r\n                    setShowCart(false);\r\n                    if (completionListDiv.current && cardListDiv.current) {\r\n                      completionListDiv.current.style.height = \"70vh\";\r\n                      completionListDiv.current.style.overflow = \"auto\";\r\n                      cardListDiv.current.style.height = \"0\";\r\n                      cardListDiv.current.style.overflow = \"hidden\";\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                {showCart ? (\r\n                  <>\r\n                    <i className=\"bi bi-x-square-fill\"></i>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <i className=\"bi bi-cart\"></i> {cart.length}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"cartList\"\r\n            ref={cardListDiv}\r\n            style={{\r\n              height: \"0\",\r\n              transition: \"all 300ms ease-in-out\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {cartItems}\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"autoCompleteWrapper\"\r\n          ref={completionListDiv}\r\n          style={{\r\n            height: \"70vh\",\r\n            transition: \"all 300ms ease-in-out\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          {autocomplete}\r\n        </div>\r\n      </div>\r\n      <Modal show={checkout} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Checkout</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <div>\r\n              <>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Text\r\n                    id=\"basic-addon1\"\r\n                    className={`${\r\n                      payment.cardNumber === \"\" ? \"bg-danger text-white\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <i className=\"bi bi-credit-card-2-front\"></i>\r\n                  </InputGroup.Text>\r\n                  <FormControl\r\n                    className={`${payment.cardNumber === \"\" ? \"error\" : \"\"}`}\r\n                    value={payment.cardNumber}\r\n                    onChange={(evt) =>\r\n                      setPayment({ ...payment, cardNumber: evt.target.value })\r\n                    }\r\n                  />\r\n                </InputGroup>\r\n              </>\r\n              <>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Text\r\n                    id=\"basic-addon1\"\r\n                    className={`${\r\n                      payment.cvv2 === \"\" ? \"bg-danger text-white\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <i className=\"bi bi-credit-card-2-back\"></i>\r\n                  </InputGroup.Text>\r\n                  <FormControl\r\n                    className={`${payment.cvv2 === \"\" ? \"error\" : \"\"}`}\r\n                    value={`${payment.cvv2}`}\r\n                    onChange={(evt) =>\r\n                      setPayment({ ...payment, cvv2: evt.target.value })\r\n                    }\r\n                  />\r\n                </InputGroup>\r\n              </>\r\n              <>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Text\r\n                    id=\"basic-addon1\"\r\n                    className={`${\r\n                      payment.exp === \"\" ? \"bg-danger text-white\" : \"\"\r\n                    }`}\r\n                  >\r\n                    MM/YY\r\n                  </InputGroup.Text>\r\n                  <FormControl\r\n                    className={`${payment.exp === \"\" ? \"error\" : \"\"}`}\r\n                    value={`${payment.exp}`}\r\n                    onChange={(evt) =>\r\n                      setPayment({ ...payment, exp: evt.target.value })\r\n                    }\r\n                  />\r\n                </InputGroup>\r\n              </>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n              <h4>Review Cart Items</h4>\r\n              {cartItems}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              setPayment(resetCard);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              setToast(true);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Complete Checkout\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div\r\n        className=\"p-3\"\r\n        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\r\n      >\r\n        <Toast\r\n          onClose={() => setToast(false)}\r\n          show={toast}\r\n          delay={3000}\r\n          autohide\r\n        >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">Success Checkout Toast</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>Items in your cart have been credited</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Switch from \"react-bootstrap/esm/Switch\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { HelpHome } from \"../help/home/HelpHome\";\r\nimport { HelpLessons } from \"../help/lessons/HelpLessons\";\r\nimport { HelpMessages } from \"../help/messages/HelpMessages\";\r\nimport { HelpProfile } from \"../help/profile/HelpProfile\";\r\nimport { HelpSearch } from \"../help/search/HelpSearch\";\r\nimport { HelpTournaments } from \"../help/tournaments/HelpTournaments\";\r\nimport { Home } from \"../home/Home\";\r\nimport { Lessons } from \"../home/lessons/Lessons\";\r\nimport { Tournament } from \"../home/tournaments/Tournament\";\r\nimport { Messages } from \"../messages/Message\";\r\nimport { Profile } from \"../profile/Profile\";\r\nimport { Search } from \"../search/Search\";\r\nimport \"./App.css\";\r\n\r\n// tslint:disable-next-line: typedef\r\nconst helpToComponentMap: { [key: string]: JSX.Element } = {\r\n  HOME: <HelpHome />,\r\n  MESSAGES: <HelpMessages />,\r\n  SEARCH: <HelpSearch />,\r\n  LESSONS: <HelpLessons />,\r\n  TOURNAMENTS: <HelpTournaments />,\r\n  PROFILE: <HelpProfile />,\r\n};\r\n\r\nfunction App(): JSX.Element {\r\n  const [show, setShow] = useState(false);\r\n  // tslint:disable-next-line: typedef\r\n  const handleClose = () => setShow(false);\r\n  // tslint:disable-next-line: typedef\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    // tslint:disable-next-line: typedef\r\n    const upcoming = {\r\n      lessons: [\r\n        {\r\n          title: \"Spikes Learn-to-Play\",\r\n          subTitle: \"Learn to play the game of volleyball from form to rules\",\r\n          date: \"August 19, 2021 - August 24, 2021\",\r\n          instructor: \"John John\",\r\n        },\r\n        {\r\n          title: \"Novice Bump and Set Lessons\",\r\n          subTitle: \"Bump lessons for beginners\",\r\n          instructor: \"John John\",\r\n          date: \"July 27, 2021 - July 30, 2021\",\r\n        },\r\n      ],\r\n      tournaments: [\r\n        {\r\n          title: \"Tournament - Intermediate challenge\",\r\n          subTitle: \"Tournament for intermediate members in the club\",\r\n          date: \"August 13, 2021\",\r\n        },\r\n        {\r\n          title: \"Tournament - Members vs Outsiders\",\r\n          subTitle:\r\n            \"Tournament for members and non-members who want to participate\",\r\n          date: \"August 10, 2021\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    const profile: {\r\n      name: string;\r\n      memberID: number;\r\n      username: string;\r\n      email: string;\r\n      password: string;\r\n      phoneNumber: string;\r\n      dob: string;\r\n      address: {\r\n        streetName: string;\r\n        city: string;\r\n        postalCode: string;\r\n        country: string;\r\n        unitOrHouseNumber: number;\r\n      };\r\n      cardInfo: {\r\n        cardNumber: string;\r\n        cvv2: number;\r\n        exp: string;\r\n      };\r\n    } = {\r\n      name: \"Derek Morgan\",\r\n      memberID: Math.random() * 10000000,\r\n      username: \"derek.morgan\",\r\n      email: \"derek.morgan@fbi.com\",\r\n      password: \"not-secure-password@fake-data\",\r\n      phoneNumber: \"111-222-3333\",\r\n      dob: \"12/12/00\", // mm/dd/yy\r\n      address: {\r\n        streetName: \"Some Street St\",\r\n        city: \"Some City\",\r\n        postalCode: \"H0H H0H\",\r\n        country: \"Some Country\",\r\n        unitOrHouseNumber: 12,\r\n      },\r\n      cardInfo: {\r\n        cardNumber: \"4444 4444 4444 4444\",\r\n        cvv2: 444,\r\n        exp: \"04/04\",\r\n      },\r\n    };\r\n\r\n    localStorage.setItem(\"upcoming\", JSON.stringify(upcoming));\r\n    localStorage.setItem(\"profile\", JSON.stringify(profile));\r\n  }, []);\r\n\r\n  // tslint:disable-next-line: typedef\r\n  const helpHeading = () =>\r\n    window.location.href\r\n      .substring(\r\n        window.location.href.lastIndexOf(\"/\") + 1,\r\n        window.location.href.length\r\n      )\r\n      .toUpperCase();\r\n\r\n  return (\r\n    <Router>\r\n      <header className=\"bg-success sticky-top d-flex justify-content-between\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{ borderRadius: \"5px\", margin: \"5px\" }}\r\n            src=\"https://image.shutterstock.com/image-vector/stylized-illustration-volleyball-fun-script-600w-1083023153.jpg\"\r\n            alt=\"\"\r\n            width=\"75\"\r\n            height=\"75\"\r\n          />\r\n          <h4 className=\"text-white\">VolleyBall Club, Bump, Set, Spike !!!</h4>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <Link to=\"/home\">\r\n            <div\r\n              className=\"d-flex justify-content-center align-items-center btn\"\r\n              style={{ fontSize: \"20px\" }}\r\n            >\r\n              <i className=\"bi bi-house-door-fill\"></i>\r\n              <div style={{ marginLeft: \"5px\" }}>Home</div>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/messages\">\r\n            <div\r\n              className=\"d-flex justify-content-center align-items-center btn\"\r\n              style={{ fontSize: \"20px\" }}\r\n            >\r\n              <i className=\"bi bi-chat-dots-fill\"></i>\r\n              <div style={{ marginLeft: \"5px\" }}>Messages</div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Route Switcher */}\r\n      <Switch>\r\n        <Route path=\"/lessons\">\r\n          <Lessons />\r\n        </Route>\r\n        <Route path=\"/tournaments\">\r\n          <Tournament />\r\n        </Route>\r\n        <Route path=\"/messages\">\r\n          <Messages />\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route path=\"/search\">\r\n          <Search />\r\n        </Route>\r\n        <Route path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {/* Help Modal */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>{`Help for ${helpHeading()} Page`}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{helpToComponentMap[helpHeading()]}</Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <a href=\"https://github.com/adso023/SEG3125-Module8-Volleyball\">\r\n              SEG3125-Module8 Github Repository\r\n            </a>\r\n            <div style={{ maxWidth: \"350px\" }}>\r\n              Plain Link: https://github.com/adso023/SEG3125-Module8-Volleyball\r\n            </div>\r\n          </div>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <footer className=\"fixed-bottom d-flex justify-content-around p-2 bg-light\">\r\n        <Link to=\"/search\">\r\n          <div\r\n            className=\"btn btn-primary\"\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"top\"\r\n            title=\"Search for lessons or tournaments\"\r\n            style={{ fontSize: \"20px\" }}\r\n          >\r\n            <i className=\"bi bi-search\" style={{ marginRight: \"5px\" }}></i>\r\n            Search\r\n          </div>\r\n        </Link>\r\n        <div\r\n          className=\"btn btn-outline-info d-flex align-items-center\"\r\n          data-bs-toggle=\"tooltip\"\r\n          data-bs-placement=\"top\"\r\n          title=\"Help for FAQs\"\r\n          style={{ fontSize: \"20px\", fontWeight: \"bolder\" }}\r\n          onClick={handleShow}\r\n        >\r\n          <i className=\"bi bi-question-circle\"></i>\r\n        </div>\r\n        <Link to=\"/profile\">\r\n          <div\r\n            className=\"btn btn-danger\"\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"left\"\r\n            title=\"Access your profile\"\r\n            style={{ fontSize: \"20px\" }}\r\n          >\r\n            <i className=\"bi bi-person-fill\"></i>Profile\r\n          </div>\r\n        </Link>\r\n      </footer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}